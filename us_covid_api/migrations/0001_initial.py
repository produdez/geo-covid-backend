# Generated by Django 4.0.6 on 2022-10-04 09:10

from django.db import migrations, models
import django.db.models.deletion
import djongo.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GlobalReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('death', models.IntegerField(blank=True)),
                ('death_confirmed', models.IntegerField(blank=True)),
                ('death_increase', models.IntegerField(blank=True)),
                ('death_probable', models.IntegerField(blank=True)),
                ('positive', models.IntegerField(blank=True)),
                ('positive_increase', models.IntegerField(blank=True)),
                ('positive_cases_viral', models.IntegerField(blank=True)),
                ('negative', models.IntegerField(blank=True)),
                ('negative_increase', models.IntegerField(blank=True)),
                ('hospitalized_cumulative', models.IntegerField(blank=True)),
                ('hospitalized_increase', models.IntegerField(blank=True)),
                ('hospitalized_currently', models.IntegerField(blank=True)),
                ('in_icu_cumulative', models.IntegerField(blank=True)),
                ('in_icu_currently', models.IntegerField(blank=True)),
                ('on_ventilator_cumulative', models.IntegerField(blank=True)),
                ('on_ventilator_currently', models.IntegerField(blank=True)),
                ('recovered', models.IntegerField(blank=True)),
                ('total_tests_people_viral', models.IntegerField(blank=True)),
                ('total_tests_people_viral_increase', models.IntegerField(blank=True)),
                ('total_tests_viral', models.IntegerField(blank=True)),
                ('total_tests_viral_increase', models.IntegerField(blank=True)),
                ('positive_tests_viral', models.IntegerField(blank=True)),
                ('negative_tests_viral', models.IntegerField(blank=True)),
                ('hospitalized', models.IntegerField(blank=True)),
                ('positive_score', models.IntegerField(blank=True)),
                ('total_test_results', models.IntegerField(blank=True)),
                ('total_test_results_increase', models.IntegerField(blank=True)),
                ('total_tests_antibody', models.IntegerField(blank=True)),
                ('total_tests_people_antibody', models.IntegerField(blank=True)),
                ('positive_tests_antibody', models.IntegerField(blank=True)),
                ('positive_tests_people_antibody', models.IntegerField(blank=True)),
                ('negative_tests_antibody', models.IntegerField(blank=True)),
                ('negative_tests_people_antibody', models.IntegerField(blank=True)),
                ('total_tests_antigen', models.IntegerField(blank=True)),
                ('total_tests_people_antigen', models.IntegerField(blank=True)),
                ('positive_tests_antigen', models.IntegerField(blank=True)),
                ('positive_tests_people_antigen', models.IntegerField(blank=True)),
                ('total_test_encounters_viral', models.IntegerField(blank=True)),
                ('total_test_encounters_viral_increase', models.IntegerField(blank=True)),
                ('date', models.DateTimeField(unique=True)),
                ('states', models.IntegerField()),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Polygon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_id', models.IntegerField(unique=True)),
                ('state_name', models.TextField(unique=True)),
                ('state_initials', models.CharField(max_length=2, unique=True)),
                ('type', models.TextField()),
                ('coordinates', djongo.models.fields.JSONField()),
            ],
            options={
                'ordering': ['state_id'],
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initials', models.CharField(max_length=2, unique=True)),
                ('name', models.TextField(unique=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('death', models.IntegerField(blank=True)),
                ('death_confirmed', models.IntegerField(blank=True)),
                ('death_increase', models.IntegerField(blank=True)),
                ('death_probable', models.IntegerField(blank=True)),
                ('positive', models.IntegerField(blank=True)),
                ('positive_increase', models.IntegerField(blank=True)),
                ('positive_cases_viral', models.IntegerField(blank=True)),
                ('negative', models.IntegerField(blank=True)),
                ('negative_increase', models.IntegerField(blank=True)),
                ('hospitalized_cumulative', models.IntegerField(blank=True)),
                ('hospitalized_increase', models.IntegerField(blank=True)),
                ('hospitalized_currently', models.IntegerField(blank=True)),
                ('in_icu_cumulative', models.IntegerField(blank=True)),
                ('in_icu_currently', models.IntegerField(blank=True)),
                ('on_ventilator_cumulative', models.IntegerField(blank=True)),
                ('on_ventilator_currently', models.IntegerField(blank=True)),
                ('recovered', models.IntegerField(blank=True)),
                ('total_tests_people_viral', models.IntegerField(blank=True)),
                ('total_tests_people_viral_increase', models.IntegerField(blank=True)),
                ('total_tests_viral', models.IntegerField(blank=True)),
                ('total_tests_viral_increase', models.IntegerField(blank=True)),
                ('positive_tests_viral', models.IntegerField(blank=True)),
                ('negative_tests_viral', models.IntegerField(blank=True)),
                ('hospitalized', models.IntegerField(blank=True)),
                ('positive_score', models.IntegerField(blank=True)),
                ('total_test_results', models.IntegerField(blank=True)),
                ('total_test_results_increase', models.IntegerField(blank=True)),
                ('total_tests_antibody', models.IntegerField(blank=True)),
                ('total_tests_people_antibody', models.IntegerField(blank=True)),
                ('positive_tests_antibody', models.IntegerField(blank=True)),
                ('positive_tests_people_antibody', models.IntegerField(blank=True)),
                ('negative_tests_antibody', models.IntegerField(blank=True)),
                ('negative_tests_people_antibody', models.IntegerField(blank=True)),
                ('total_tests_antigen', models.IntegerField(blank=True)),
                ('total_tests_people_antigen', models.IntegerField(blank=True)),
                ('positive_tests_antigen', models.IntegerField(blank=True)),
                ('positive_tests_people_antigen', models.IntegerField(blank=True)),
                ('total_test_encounters_viral', models.IntegerField(blank=True)),
                ('total_test_encounters_viral_increase', models.IntegerField(blank=True)),
                ('date', models.DateTimeField()),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='us_covid_api.state')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.AddIndex(
            model_name='globalreport',
            index=models.Index(fields=['date'], name='us_covid_ap_date_a9eaf3_idx'),
        ),
        migrations.AddIndex(
            model_name='report',
            index=models.Index(fields=['date'], name='us_covid_ap_date_07cecd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='report',
            unique_together={('date', 'state')},
        ),
    ]
